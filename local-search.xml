<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>杂谈</title>
    <link href="/2024/11/04/%E6%9D%82%E8%B0%88/"/>
    <url>/2024/11/04/%E6%9D%82%E8%B0%88/</url>
    
    <content type="html"><![CDATA[<p>最近学校的破事很多，心情不怎么样。</p><p>数电，有课设。淡然最主要的是门课本身水的要死，老师讲的不怎么样，还他妈搞了个上课回答问题记名的制度，跟隔壁脑瘫英语课一个狗样子。每次回答的都是那几个爱出风头的人，全都去死好了。</p><p>期中考试，下下周末。考大物和概率论，要花点时间复习刷题。</p><p>N2考试，12月1号。如果只是通过的话并不算很难，180分拿到90分就算合格了，还是赋分制。但是我想考得尽量高一点，这是显示自己能力的机会。虽说JLPT本身的水分（只考听力和阅读）是有目共睹的，但是在我的心中它的地位比期中考试高。</p><p>12月9号考数学物理方法。这门课很难，但是对电磁场有一点用处，不说了。</p><p>最后，弱智室友。总结一下，我的这位室友每天只做两件事情：刷视频，刷题。刷视频的时候时不时突然发出罐头笑声，他妈的吵死了。刷题的时候必带着耳机听歌，必抖腿。衣服上有一个拉链，抖腿的时候拉链会和椅子连续碰撞，发出持续的噪声。有概率边唱歌边做题，唱歌，指的是气流和喉咙摩擦发出意义不明的摩擦声，就算带着头戴式耳机也完全无法屏蔽。这种声音主要是长音，对恶心人的长音，听起来非常蠢。其实大一的时候他更逆天。大一上学期每当刷题的时候必定大幅度的抖腿+吹口哨，对你没听错是吹口哨。后来我彻底被激怒了，有生以来为数不多的被激怒，警告他以后不要再这样做。现在的他已经很收敛了，但是我仍然鄙视他。每天晚上熄灯以后必然在床上带着耳机刷视频，耳机漏音，以及是不是能听到他憋笑的声音。多动症，现在快到从秋天了床上仍然铺着凉席，肢体于凉席摩擦+手部挠痒的声音混杂在一起，晚上是别他妈睡了。一般刷视频刷到凌晨两三点才算完。</p><p>你可能觉得这是一个不折不扣的废物，戳啦，人家的学业成绩是专业第一😂毕竟大学的评价体系和狗屎高中没有任何本质区别，听话多刷题就是winner，和人品无关。</p><p>以上纯属个人发牢骚。他们跟我搭话的时候我还是会回答，但我绝对不会主动和他们多说任何一句话。我只想找一个没有一个人的安静的空间里做自己的事情，不被干扰。这原来那么难吗。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>日語中的「くの字点」</title>
    <link href="/2024/10/30/%E6%97%A5%E8%AA%9E%E4%B8%AD%E7%9A%84%E3%80%8C%E3%81%8F%E3%81%AE%E5%AD%97%E7%82%B9%E3%80%8D/"/>
    <url>/2024/10/30/%E6%97%A5%E8%AA%9E%E4%B8%AD%E7%9A%84%E3%80%8C%E3%81%8F%E3%81%AE%E5%AD%97%E7%82%B9%E3%80%8D/</url>
    
    <content type="html"><![CDATA[<style>p { font: 12pt Yu Mincho !important; }</style><p>最近在青空文庫上閲讀日語圖書的時候發現了這樣一段文字：</p><blockquote><p>表記について<br />このファイルは W3C 勧告 XHTML1.1 にそった形式で作成されています。<br />「くの字点」は「／＼」で表しました。</p></blockquote><p>即：此文件是根据W3C推荐的XHTML1.1格式制作的。'くの字点'用'／＼'表示。</p><p>「くの字点」是什麽？</p><p>我找到了這樣一篇解釋文章：<ahref="https://www.canon-its.co.jp/files/topics/2560_ext_06_0.pdf">https://www.canon-its.co.jp/files/topics/2560_ext_06_0.pdf</a></p><p>所謂'くの字点'，就是在重复两个字以上的假名，或漢字与假名時使用的標記符號。如果在重複時漢字的讀音變爲濁音，那麽くの字点也要相應地加上濁音符號。一個くの字点要占用兩個字節的位置。以下圖爲例：</p><p><img src="https://i.imgur.com/7NyGuQV.png" /></p><p>まあまあー＞まあ／＼ 大致，還算過得去<br />しかじかー＞しか／"＼　云云，等等<br />見る見るー＞見る／＼　眼看著，轉眼間<br />離れ離れー＞離れ／＼　失散</p><p>由於日語文章經常按照縱向排列，因此青空文庫就使用“／＼”來代替這個符號了。</p>]]></content>
    
    
    <categories>
      
      <category>日语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Look Back</title>
    <link href="/2024/10/26/ganxiang/"/>
    <url>/2024/10/26/ganxiang/</url>
    
    <content type="html"><![CDATA[<p>今天去电影院看了《蓦然回首》。我看的那一场几乎坐满了人，但是全程几乎没有人说话和刷手机，可能是因为大部分人都是学生吧。</p><p>这个电影比我想象中的更加惊艳，真的有触动到我…上次产生这样的感觉还是《天气之子》的时候吧。藤野第一次和京本见面之后，得到了京本的认可，从京本的家中出来，在雨中的泥泞道路中起舞。看到这个场景的时候，不知为何我忍不住哭了出来…包括看到后来藤野和京本一起画漫画、互相陪伴的剧情时，我也一直有一种想哭的感觉，拼命咬住牙才没哭出来…这是我第一次因一个作品而受到如此大的触动。</p><p>为什么会产生这种感觉呢。我明明从来没有画过漫画。大概我也想像藤野一样，在自己热爱的领域得到别人的认可，然后和同样热爱这一事物的人一起努力吧。藤野和京本之间的友谊真的无比耀眼…</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Orangestar - Alice in 冷凍庫 (feat. IA)歌詞</title>
    <link href="/2024/10/26/Alice%20in%20%E5%86%B7%E5%87%8D%E5%BA%AB/"/>
    <url>/2024/10/26/Alice%20in%20%E5%86%B7%E5%87%8D%E5%BA%AB/</url>
    
    <content type="html"><![CDATA[<style>p { font: 12pt Yu Mincho !important; }</style><p>作詞：Orangestar<br />作曲：Orangestar</p><p>凍えナンセンス劇場。</p><hr /><p>それは時の果てる</p><p>劇場世界のプロローグ</p><p>A lie？　君は誰？</p><p>どことなく物憂げに</p><p>裸足のままで</p><p>張りつく夜に遊ぶように</p><p>彷徨う僕は何故か</p><p>君を探しているのだ</p><p>だぁ　だぁ</p><p>あの日のいつかまでの</p><p>星座のソラは闇のように</p><p>閉ざされた小景に</p><p>意味もなく吐き捨てる</p><p>あぁ僕は何故</p><p>僕をどこまで連れてくの</p><p>開けたその先に</p><p>いつか見た扉</p><p>合図で　るらったったった</p><p>繰り返して　回ったったった</p><p>君が居そうな氷漬けの夢</p><p>迷走　昏いステップ</p><p>るらったったった</p><p>寂しくて　笑ったったった</p><p>踏み出すままに汚せ</p><p>今は凍えぬように</p><p>言葉よりも意味を成せ</p><p>冷めやらな世界　病みの曜日</p><p>消え行くあてもなく</p><p>独り舞台に泣き崩れる</p><p>あぁもう嫌だ</p><p>全て０からやり直して</p><p>回り切ったその先に</p><p>いつか見た扉</p><p>荒んだ夜　眠れないレイニー</p><p>自称冷静な世界とside alley-C00</p><p>見据えたナンセンス</p><p>必然の解離僕らまた出逢えるように</p><p>あぁ</p><p>朝靄を空に裂いた</p><p>君のその柔い手が</p><p>白銀製の張を</p><p>たやすく浚ってゆく</p><p>知らぬまま大人になるほど</p><p>懐かしさは残るけど</p><p>それも全部かき混ぜて</p><p>廻り出す今日は綺麗だ</p><p>時間が音をたてながら</p><p>崩れてゆく最後を</p><p>君は何故か悲しそうに</p><p>笑いながら踊るWonderland</p><p>またあの日と同じようなさ</p><p>星空に吞まれては</p><p>紡ぎ出した言葉通りの</p><p>想い　熱を放て</p>]]></content>
    
    
    <categories>
      
      <category>日语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>LTspice中SW元件的使用</title>
    <link href="/2024/10/14/LTspice%E4%B8%ADSW%E5%85%83%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/10/14/LTspice%E4%B8%ADSW%E5%85%83%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>LTspice不像Multisim那样有现成的手动开关。开关功能可以用<strong>S.Voltage Controlled Switch</strong>（压控开关）实现。</p><p><img src="https://i.imgur.com/1EAGN5i.png" /></p><ol type="1"><li>按P键打开元件库，搜索"SW"，放置在图纸中</li><li>插入指令定义SW元件的行为，例如：<code>.model MYSW SW(Ron=1 Roff=1Meg Vt=.5 Vh=-.4)</code>，其中<code>Ron</code>是导通电阻（<strong>导通电阻不能为0！</strong>），<code>Roff</code>为断开电阻，Vt和Vh决定了开关的阈值电压，在本例中为0.9V和0.1V</li><li>将开关模型的名称改成MYSW</li><li>放置一个电压源用来控制开关，这里用的是Pulse，开关在闭合1s后保持关断状态。</li></ol><p>SW相关的所有参数如下表格：</p><table><thead><tr><th style="text-align: center;">Name</th><th style="text-align: center;">Description</th><th style="text-align: center;">Units</th><th style="text-align: center;">default</th></tr></thead><tbody><tr><td style="text-align: center;">Vt</td><td style="text-align: center;">阈值电压</td><td style="text-align: center;">V</td><td style="text-align: center;">0.0</td></tr><tr><td style="text-align: center;">Vh</td><td style="text-align: center;">滞后电压</td><td style="text-align: center;">V</td><td style="text-align: center;">0.0</td></tr><tr><td style="text-align: center;">Ron</td><td style="text-align: center;">导通电阻</td><td style="text-align: center;">Ω</td><td style="text-align: center;">1.0</td></tr><tr><td style="text-align: center;">Roff</td><td style="text-align: center;">关断电阻</td><td style="text-align: center;">Ω</td><td style="text-align: center;">1/Gmin</td></tr><tr><td style="text-align: center;">Lser</td><td style="text-align: center;">串联电感</td><td style="text-align: center;">H</td><td style="text-align: center;">0.0</td></tr><tr><td style="text-align: center;">Vser</td><td style="text-align: center;">串联电压</td><td style="text-align: center;">V</td><td style="text-align: center;">0.0</td></tr><tr><td style="text-align: center;">Ilimit</td><td style="text-align: center;">限制电流</td><td style="text-align: center;">A</td><td style="text-align: center;">Infin.</td></tr></tbody></table><p><strong>该开关根据滞回电压 Vh的值，具有三种不同的电压控制模式:</strong></p><ul><li>如果 Vh为零，开关将始终完全导通或关断，具体取决于输入电压是否超过阈值电压。</li><li>如果 Vh为正值，开关将表现出滞回现象，就像通过施密特触发器控制一样，触发点为 Vt- Vh 和 Vt + Vh。需要注意的是，Vh是触发点之间电压的一半，这与常见的实验室术语有所不同。</li><li>如果 Vh为负值，开关将在导通和关断阻抗之间平滑过渡。过渡发生在控制电压 Vt - Vh和 Vt + Vh 之间，且平滑过渡遵循开关导通行为的对数的低阶多项式拟合。</li></ul><p>平时设Vh为负值就好。</p><p>参考链接：<br /><ahref="https://www.analog.com/cn/resources/technical-articles/ltspiceiv-voltage-controlled-switches.html#:~:text=To%20insert%20and%20configure%20a%20switch%20in%20LTspice%E2%80%A6,this%20example%3A.model%20MYSW%20SW%20%28Ron%3D1%20Roff%3D1Meg%20Vt%3D.5%20Vh%3D-.4%29">LTspice:Voltage Controlled Switches</a></p>]]></content>
    
    
    <categories>
      
      <category>EE</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>黃昏乙女×失憶幽靈 插曲 - 安魂曲(Requiem) (中日歌詞)</title>
    <link href="/2024/10/12/%E9%BB%83%E6%98%8F%E5%B0%91%E5%A5%B3/"/>
    <url>/2024/10/12/%E9%BB%83%E6%98%8F%E5%B0%91%E5%A5%B3/</url>
    
    <content type="html"><![CDATA[<style>p { font: 12pt Yu Mincho !important; }</style><figure><imgsrc="https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExa3pqb3d4MHhkcjMyMTB5aDZscXY3ZDYzZmN6eHN1N2RqNmV1emZwYSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/3EpJECI9nYJ2T0UUP5/giphy.gif"alt="大愛夕子學姐" /><figcaption aria-hidden="true">大愛夕子學姐</figcaption></figure><p>最近補完了一直想看的老番《黃昏乙女×失憶幽靈》，對插曲レクイエム印象深刻…因此将這首歌的歌詞整理一下。</p><p>中文歌詞来源：Eve Y.Translate</p><p>歌 / 作詞 / 作曲 - 柊奈緒</p><hr /><p>あぁ あなたは 啊啊 你啊　　</p><p>あぁ いつか<br />啊啊 要到何時</p><p>私に告げるのでしょう<br />才打算告訴我呢</p><p>優しい声できっと<br />一定會用很溫柔的聲音訴説吧</p><p>魂は揺れる きらきら こぼれる涙の星<br />靈魂搖曳 閃閃發光 宛如流下眼淚的星星</p><p>やがて来る 悲しいだけの 未来よ永久に眠れ<br />在即將到來 只有悲傷存在的未來 永久地沉睡</p><p>あぁ 私は<br />啊啊 我啊</p><p>あぁ いつか<br />啊啊 要到何時</p><p>その手を離すのでしょう<br />才會放開那雙手呢</p><p>優しい笑みできっと<br />你一定是帶著溫柔的微笑吧</p><p>魂は揺れる きらきら こぼれる涙の星<br />靈魂搖曳 閃閃發光 宛如流下眼淚的星星</p><p>あなたの近くにいられる この瞬間よ続け<br />讓陪伴在你身邊的 這一個瞬間持續下去吧</p><p>夕暮れの空も<br />無論是黃昏的天空</p><p>藍色の夜も<br />還是深藍的夜晚</p><p>胸に刻まれる<br />全都刻在心底啊</p><p>あなたとの日々よ<br />那些與你在一起的日子</p>]]></content>
    
    
    <categories>
      
      <category>日语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>为Fluid主题首页的副标题添加淡入效果</title>
    <link href="/2024/10/04/%E4%B8%BAFluid%E4%B8%BB%E9%A2%98%E9%A6%96%E9%A1%B5%E7%9A%84%E5%89%AF%E6%A0%87%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%B7%A1%E5%85%A5%E6%95%88%E6%9E%9C/"/>
    <url>/2024/10/04/%E4%B8%BAFluid%E4%B8%BB%E9%A2%98%E9%A6%96%E9%A1%B5%E7%9A%84%E5%89%AF%E6%A0%87%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%B7%A1%E5%85%A5%E6%95%88%E6%9E%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>最近又折腾了一下博客的美化。默认Fluid主题的首页副标题用的是打字机特效，不过我不太喜欢，于是琢磨了一下淡入效果。我并没有学过前端，一下代码主要靠chatgpt和其他网友得到。</p><h1 id="过程">过程</h1><p>使用F12打开开发者模式，定位副标题：<br /><img src="https://i.imgur.com/mgjRfJ2.jpg" alt="Imgur" />目标对应的元素为<code>.h2 #subtitle</code>，在外部CSS文件中加入下列代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs css">    <span class="hljs-keyword">@font-face</span> &#123;<br>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&quot;Si Yuan&quot;</span>;<br>    <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&quot;../fonts/Si Yuan.otf&quot;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;truetype&quot;</span>);<br>    <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">400</span>;<br>  &#125;<br><br><span class="hljs-selector-class">.h2</span> <span class="hljs-selector-id">#subtitle</span> &#123;<br>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Si Yuan&#x27;</span>, sans-serif; <span class="hljs-comment">/* 替换为你想要的字体 */</span><br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">32px</span>; <span class="hljs-comment">/* 调整字体大小 */</span><br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#ffffff</span>; <span class="hljs-comment">/* 设置字体颜色 */</span><br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>; <span class="hljs-comment">/* 初始透明度为0，隐藏 */</span><br>    <span class="hljs-attribute">transition</span>: opacity <span class="hljs-number">1.5s</span> linear; <span class="hljs-comment">/* 设置过渡效果 */</span><br>  &#125;<br><br><span class="hljs-selector-class">.h2</span> <span class="hljs-selector-id">#subtitle</span><span class="hljs-selector-class">.visible</span> &#123;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>; <span class="hljs-comment">/* 完全可见 */</span><br>  &#125;<br></code></pre></td></tr></table></figure><p>由于这里我使用的是思源宋体，并非系统自带的字体，因此额外使用<code>@font-face</code>引入外来字体。</p><p>另外，注意文章页的标题和首页的标题用的是同一个元素，二者会同时发生变更。</p><p>再向外部js文件中加入下列代码： <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;DOMContentLoaded&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> subtitle = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;subtitle&#x27;</span>);<br>    subtitle.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;visible&#x27;</span>); <span class="hljs-comment">// 页面加载后添加 visible 类</span><br>&#125;);<br></code></pre></td></tr></table></figure> 完成。</p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>雪酷字幕组的特效注释字幕分析</title>
    <link href="/2024/10/02/%E9%9B%AA%E9%85%B7%E5%AD%97%E5%B9%95%E7%BB%84%E7%9A%84%E7%89%B9%E6%95%88%E6%B3%A8%E9%87%8A%E5%AD%97%E5%B9%95%E5%88%86%E6%9E%90/"/>
    <url>/2024/10/02/%E9%9B%AA%E9%85%B7%E5%AD%97%E5%B9%95%E7%BB%84%E7%9A%84%E7%89%B9%E6%95%88%E6%B3%A8%E9%87%8A%E5%AD%97%E5%B9%95%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>雪酷字幕组在2011至2012年期间与曙光字幕组合作完成了《命运石之门》的翻译工作，这也是我最早看的一个版本，翻译非常贴切自然，并且动漫中出现的流行词汇也都附上了详尽的注释。可惜在2014年之后雪酷字幕组就突然失踪了……这里我想分析一下他们在为《命运石之门》做字幕注释时用到的特效方案，从中窥视那个时代的字幕组对待字幕工作是何等敬业。</p><span id="more"></span><p>以繁体版第10集3:46处的注释为例，ass文件代码如下：</p><pre><code class="hljs">3:46.19~3:51.20     &#123;\move(15,20,15,10,0,200)\pos(15,10)\fad(300, 300)&#125;Blood Tune3:45.90~3:51.41   &#123;\fscx0\pos(15,20)\t(0,200,1,\fscx100)\t(5300,0,1,\fscx0)&#125;————3:46.19~3:51.20   &#123;\move(15,20,15,50,0,200)\pos(15,50)\fad(300, 300)&#125;（架空）ＴＶ動畫『BLOOD TUNE THE ANIMATION』。\N原作是漫畫，隨著多元媒體化的風潮終於在去年動畫化。\N作品被製作成為全２６話的作品，受到了動漫愛好者們的廣泛關注，\N特別是女主角『星來Orujeru』的PVC模型擁有相當高的人氣。</code></pre><p>上面一共用了三段字幕来完成对【BloodTune】的注释。而且，三段字幕分别使用了三种不同大小的字体（在1080p清晰度下）：</p><ol type="1"><li>neta1-微软雅黑，用于注释对象的名称，字号26，边框2，阴影0</li><li>neta2-微软雅黑，用于创造分界线，字号40，边框2，阴影0</li><li>neta3-微软雅黑，用于注释的具体内容，字号28，边框2，阴影0</li></ol><p>实现的效果如图 <imgsrc="https://media.giphy.com/media/EuIDh9scyssnZXBT39/giphy.gif" /></p><p>下面对这三段代码进行逐行分析。</p><h1 id="平滑的文本展示效果">平滑的文本展示效果</h1><p><code>\move</code>用于设置文本的<strong>移动轨迹</strong>，其基本语法是<code>\move(x1,y1,x2,y2,start_time,end_time)</code>，其中<code>(x1,y1)</code>是起始位置，<code>(x2,y2)</code>是结束位置，<code>start_time</code>和<code>end_time</code>定义动画的开始和结束时间（单位：毫秒）。</p><p><code>\pos</code>用于设置文本的<strong>绝对位置</strong>，其语法是(x,y)，其中 x 和 y是屏幕坐标。这个命令将文本固定在指定的位置，不随时间变化。</p><p><code>\fad</code>用于设置文本的<strong>淡入淡出</strong>效果，其基本语法是<code>\fad(fade_in_time, fade_out_time)</code>，其中<code>fade_in_time</code>是淡入持续的时间（毫秒），<code>fade_out_time</code>是淡出持续的时间（毫秒）。</p><p><code>&#123;\move(15,20,15,10,0,200)\pos(15,10)\fad(300, 300)&#125;Blood Tune</code>是一串复合代码，综合以上三点，其作用为：- 文本从屏幕坐标<code>(15, 20)</code>移动到<code>(15, 10)</code>，在 0毫秒时开始，200 毫秒时结束。 -文本运动到<code>(15,10)</code>后会被固定到这个位置。 -在文本开始移动的同时，会附加一个300毫秒的淡入效果，在文本消失时则有300毫秒的淡出效果。</p><h1 id="动态的分界线">动态的分界线</h1><p><code>\fscx</code>用于设置文本的<strong>水平缩放</strong>(<strong>f</strong>ront<strong>sc</strong>ale<strong>x</strong>)，其基本语法是<code>\fscx&lt;value&gt;</code>，其中<code>&lt;value&gt;</code>是缩放的百分比值。例如：</p><ul><li><code>\fscx100</code>表示正常大小</li><li><code>\fscx50</code>表示正常大小的一半</li></ul><p><code>\t</code>用于创建<strong>动画效果</strong>（transformation），从一个样式动画渐变到另外一个。Aegisub手册给出的语法如下：</p><pre><code class="hljs">\t(&lt;style modifiers&gt;)\t(&lt;accel&gt;,&lt;style modifiers&gt;)\t(&lt;t1&gt;,&lt;t2&gt;,&lt;style modifiers&gt;)\t(&lt;t1&gt;,&lt;t2&gt;,&lt;accel&gt;,&lt;style modifiers&gt;)</code></pre><p>本例使用的是第四个。其中<code>&lt;style modifiers&gt;</code>参数是特效标签，<code>accel</code>参数可以让动画效果不再是匀速的，而是满足一条指数曲线。该参数为1时，运动速度是恒定的。参数在0和1之间时，运动速度逐渐变慢。参数大于1时，运动速度越来越快。</p><p>整个代码的运行逻辑可以用下图概括：<br /><img src="https://i.imgur.com/r6Rsdn7.png" /></p>]]></content>
    
    
    <categories>
      
      <category>字幕</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>简易温度传感器设计</title>
    <link href="/2024/09/19/%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    <url>/2024/09/19/%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>最近在上一门叫电子设计基础的课。课上要设计一个简易温度传感器，然而老师给出的方案真心不怎么样，所以自己重新设计了一个</p><p><imgsrc="https://github.com/banyee19/blog_images/blob/main/%E6%B8%A9%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8%E5%AE%9E%E7%89%A9.jpg?raw=true" /></p><p>用二极管做温度传感器，STM32F103C8T6采集电压数据换算成温度，最后用数码管显示出来。供电采用3.7V锂电池，还配备有Type-C插口用来充电。</p><p>原理图如下：</p><p><imgsrc="https://github.com/banyee19/blog_images/blob/main/%E6%B8%A9%E5%BA%A6%E8%AE%A1%E5%8E%9F%E7%90%86%E5%9B%BE.jpg?raw=true" /></p><p>这里最复杂的应该是供电部分。供电部分的方案用的是了TT在射频功率计的设计里使用的方案，锂电池输入经过TPS63070升压到6.3V，再经SPX3819和RT9013分别降压到5V和3.3V。锂电池充电管理使用IP2312。数码管驱动用的是74HC595，用单片机的三个IO口就能同时控制数码管的8个脚，余下两个LED的阴极则与三极管开关相连，没有直接接单片机IO口主要是考虑到单片机吸收电流的能力有限，因此间接使用IO口控制三极管的通断。在同一时刻，数码管只能显示一个数字，为了达到同时显示的效果需要利用视觉暂留，我设定两个数字的闪烁频率为100Hz。</p><p>二极管的导通压降与温度的关系大约是-2mV/摄氏度，此处运放反向放大30倍，这样能覆盖大约55摄氏度的范围。单片机同时读取运放的输出电压和电池电量，电量过低时指示灯亮起。</p>]]></content>
    
    
    <categories>
      
      <category>电子设计</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Fluid主题渲染LaTeX数学公式的问题总结</title>
    <link href="/2024/09/15/Hexo%20Fluid%E4%B8%BB%E9%A2%98%E6%B8%B2%E6%9F%93LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <url>/2024/09/15/Hexo%20Fluid%E4%B8%BB%E9%A2%98%E6%B8%B2%E6%9F%93LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p>在Fluid的<ahref="https://hexo.fluid-dev.com/docs/guide/#latex-%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F">官方指南文档</a>中已经做了详尽的说明，一步一步跟着做就没问题。值得注意的是，在主题配置的代码</p><pre><code class="hljs">post:math:enable: truespecific: falseengine: mathjax</code></pre><p>中，要想使用数学公式，<code>enable</code>一项必须是<code>true</code>才行，否则会出现渲染错误，比如像下面这样：</p><p><imgsrc="https://github.com/banyee19/blog_images/blob/main/%E4%B8%8D%E5%90%AF%E7%94%A8.jpg?raw=true" /></p><p>同样的公式渲染了一次之后又重复了一次。</p><p>另外，Hexo中无法使用换行符<code>\\</code>，原因是<code>\</code>在Markdown属于特殊字符，用于字符转义，所以两个<code>\</code>经过Markdown引擎处理为html后，只剩下一个，等到LaTex渲染引擎处理时，实际上只看到一个<code>\</code>，渲染引擎把它当作LaTeX 中的空格。</p><p>在不改动现有代码的情况下，我的解决方法是直接改变公式的写法。比如下边这个公式</p><pre><code class="hljs">$$a_11=b_11 \\a_22=b_22+c_22$$</code></pre><p>改为</p><pre><code class="hljs">$$\begin&#123;aligned&#125;a_&#123;11&#125;&amp; =b_&#123;11&#125;\\a_&#123;22&#125;&amp; =b_&#123;22&#125;+c_&#123;22&#125;\end&#123;aligned&#125;$$</code></pre><p>渲染效果如下： <span class="math display">\[\begin{aligned}a_{11}&amp; =b_{11}\\a_{22}&amp; =b_{22}+c_{22}\end{aligned}\]</span> 更复杂的公式同理： <span class="math display">\[\begin{aligned}    F_x&#39;&amp;=\gamma\{q[\frac{-i\gamma}{c}(u_t&#39;+i\betau_x&#39;)E_x+u_y&#39;B_z-u_z&#39;B_y]    +i\beta\frac{iq}{c}[\gamma(u_x&#39;-i\betau_t&#39;)E_x+u_y&#39;E_y+u_z&#39;E_z] \}\\    &amp;=\frac{-iq\gamma^2}{c}(1-\beta^2)E_xu_t&#39;-q\gamma(B_y+\frac{\beta}{c}E_z)u_z&#39;+q\gamma(B_z-\frac{\beta}{c}E_y)u_y&#39;\end{aligned}\]</span></p>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>成为烤肉man的这半个月</title>
    <link href="/2024/09/15/%E7%BF%BB%E8%AF%91%E6%84%9F%E6%83%B3/"/>
    <url>/2024/09/15/%E7%BF%BB%E8%AF%91%E6%84%9F%E6%83%B3/</url>
    
    <content type="html"><![CDATA[<p>今年暑假的倒数第二天，我在手机端的b站首页刷到了这个视频：<imgsrc="https://github.com/banyee19/blog_images/blob/main/%E7%83%A4%E8%82%89man.jpg?raw=true" /><br />看到这个视频以后我就有一种跃跃欲试的感觉。因为我本身是有一定的日语基础的，因为兴趣自学了两年日语。如果能用自己学到的知识帮助更多的人，那就再好不过了。于是，在第二天，也就是暑假的最后一天，我安装了Aegisub，开始学习字幕制作，并在当天晚上找到了一个合适的视频——一个时长三分钟的《败犬女主》短评，做翻译做到晚上十二点多。然后才匆匆收拾行李准备第二天回学校。</p><p>说实话，这时候我还不确定能不能做下去。因为译制就意味着自己要对这个视频的字幕的正确性负责，翻译不好的话反而可能会被骂。我一直是尽量避免去承担责任的那种人，所以在犹豫。不过，不管怎么说，到学校之后我还是把那个短评给翻完了。这之后还要向原作者请求授权，我翻了一下作者的首页，发现要用邮箱联系他…然后借助chatgpt把邮件写完，正要发送时，我停了下来——为了一个仅仅三分钟的视频，特地发一大段的邮件来授权，况且视频内容本身也不算非常新颖，这也太…所以我到最后也没有把翻译好的视频发出来，就把这当成一次字幕入门练习了。</p><p>这之后我在油管上找到了一个还不错的夏日隧道的影评，时长10分钟左右，观点也很新颖，就决定是这个了。视频的翻译进行到一半的时候，我在X上私信了原作者，请求转载授权。不过原作者那几天刚好没看X，过了一天之后还没回复，说真的这时我已经开始后悔了。一个踏踏实实做视频的人突然被一个外国人私信说希望翻译授权，这多少有点怪异吧，毕竟原视频的播放量本来也不算高。但是，就在第二天晚上，对方回复了：</p><blockquote><p>----様<br />ご連絡ありがとうございます。<br />動画の翻訳転載ですがBiliBiliだけに転載するのであれば問題ありません。<br />アップロードしたあとにURLをDMで教えて下さい。<br />よろしくお願いいたします。</p></blockquote><p>看到这个回复的时候我真的是非常惊喜的…怀着感激的心情，我下定决心一定要把视频尽可能完美地翻译出来。发出申请是在9月2日，正式完工是在9月6日，中间的3、4号我一直在反复地进行翻译、校对，而5号晚上重制了原视频的封面。之所以要重制，主要是因为b站的网页端和手机端首页显示的封面尺寸是不同的（逆天），从油管上直接下载的尺寸为1280x720，而b站手机端封面显示的是1280x960，如果不加修改直接上传，势必导致封面被二次裁剪，使得关键信息也被裁掉。所以，我重新从原电影中截取了视频封面所使用的那一帧，然后搜索确认封面所用字体为チェックポイントファント，在5号晚上用PS重制了封面。啊，这样就能给原作者一个交代了吧，我想。6号早上正式发布视频，随即私信联系了原作者，把视频链接发了过去。</p><p>作者很快就给了答复，在感谢我的译制的同时告诉我以后如果要搬运她的视频的话不必事先请求，只要投稿完毕之后用私信把链接发过去就好。虽然这个视频的播放量很惨淡，但不管怎么说，我的翻译之路正式开始了。</p><p>截至这篇博客发布为止，我已经翻译好了一个影评、一个采访视频和一篇专访。我倾向于去翻译这些影评和专访，因为这类视频/文章一般比较长，内容很充实，并且是说话人观点的直接输出。而且这种体裁本身也比较严肃，所以翻译的时候有更高的要求，<strong>必须使得每一句话的翻译都尽可能接近原意，否则就是对说话人观点的曲解</strong>。为了做到这一点，我在每一段话上都投入了相当多的精力，校对了一遍又一遍。另一方面，字幕字体的选择也是一个重要的问题。对于一般的游戏杂谈等，字幕的意义仅仅在于清晰地传达说话人所说的内容，因此阅读效率更高的无衬线字体是第一选择，比如思源粗体。但是对于访谈来说，我个人觉得字幕本身也是视频画面的重要部分，因此在保证字幕清晰的前提下我倾向于选择有衬线字体。比如最近翻译的专访中我就使用了思源宋体中文+游明朝日文的字幕搭配，视觉效果非常不错。</p><p>这样的翻译流程虽然非常花费时间，但是当看到自己翻译出来的成品时，还是非常有成就感的。当然最开心的莫过于那些来自观众的支持和感谢的评论。能帮到大家真是太好了…这就是学习语言的意义所在啊（泪目）通过这种方式，我也许能离早期的互联网精神更近那么一点点吧？</p><p>因为我自身也是个学生，只能在闲的时候翻译一点东西，效率和那些字幕组相比肯定差远了，但是没关系。这个过程能让我感到充实，能帮助到大家，这就够了。以后还要多多烤肉！（笑）</p>]]></content>
    
    
    <categories>
      
      <category>日语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>序章-新博客的诞生</title>
    <link href="/2024/09/13/hello-world/"/>
    <url>/2024/09/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>新博客建成祝贺！ <span id="more"></span>经过两天的配置，，终于成功用Github把博客搭建出来了！</p><p>其实之前我一直是在博客园上面写博客的（虽然也才刚写了几个月），但是最近博客园的运营情况令人堪忧，可能再过几个月就要被收购了，嘛这样的话到时候博客园大概率要植入广告了，所以索性自己创建一个博客好了。另一方面，我写博客的目的是把自己的想法记录下来，或者分享自己的知识，所以博客园那种类似于论坛式的模式其实并不是很适合我。只要把博文发出来，我就达到目的了，就算没有人看也没关系。</p><p>不出意外的话这个博客应该会长期更新下去。毕竟是自己费了好大的功夫才建出来的嘛（笑）我在生活中并不喜欢和别人交流，周围能和我一起交流喜欢的事物的人几乎没有，但是我还是希望把自己思考的东西分享出来。那干脆就借助博客好了。以后这个博客上会发布各种我感兴趣的内容。</p><p>总之，我宣布，Banyee's Blog从今天开始正式成立了！</p>]]></content>
    
    
    
    <tags>
      
      <tag>初次见面</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
